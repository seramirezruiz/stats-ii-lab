geom_smooth(method = "loess") +
scale_color_discrete(name = " ", labels = c("No treatment", "Treatment")) +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
ggplot(cct_data, aes(x = hh_income, y = years_of_schooling, color = factor(treatment))) +
geom_point(alpha = 0.1) +
labs(x= "Household Income", y = "Years of Schooling") +
geom_smooth(method = "loess") +
scale_color_discrete(name = " ", labels = c("No treatment", "Treatment")) +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
ggplot(mlda,aes(x = agecell,  y = outcome, col = as.factor(treatment))) +
geom_point() +
geom_smooth(method = "loess") +
labs(title = "LOESS smoothing",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=20)
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=10)
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25)
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25) %>%
theme_minimal()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25) %>%
theme_minimal()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25) +
theme_minimal()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25) +
labs(title = "Income distribution",
x = "Household Income",
y = "Number of respondents") +
theme_minimal()
ggplot(cct_data, aes(x= hh_income)) +
geom_histogram(bins=25) +
labs(title = "Income distribution",
x = "Household Income",
y = "Number of respondents") +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
# running linear model with common slope
ed_achievement <- lm(years_of_schooling ~ treatment + hh_income, data = cct_data)
summary(ed_achievement)
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
ggplot(mlda, aes(x = agecell, # actual age
y = treatment, # are they over 21 or not
color = factor(treatment))) +
geom_point() +
labs(x = "Age",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_discrete(name = " ",
labels = c("Under legal drinking age", "Over legal drinking age")) +
geom_vline(xintercept = 21, linetype = "dotted") +
theme_minimal()
ggplot(mlda,
aes(x = agecell, # age
y = outcome)) + # mortality rate per 100k accidents
geom_point() +
geom_vline(xintercept = 21, linetype = "dotted") +
labs(title = "Exploratory plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
theme_minimal()
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
mlda$yhat_linear <- predict(linear_common_slope) # we create a new variable containing the predicted mortality rate
linear_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_linear,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Linear model with common slope",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
linear_plot
linear_different_slope <- lm(outcome ~ treatment*forcing, data = mlda)
summary(linear_different_slope)
diff_slopes_plot <- mlda %>%
ggplot(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(title = "Linear model with different slopes",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
diff_slopes_plot
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
mlda$yhat_quadratic <- predict(quadratic)
quadratic_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_quadratic,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Quadratic plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
quadratic_plot
install.packages("patchwork")
install.packages("patchwork")
install.packages("
(linear_plot, diff_slopes_plotm quadratic_plot)
(linear_plot/ diff_slopes_plot/ quadratic_plot)
(linear_plot| diff_slopes_plot| quadratic_plot)
(linear_plot| diff_slopes_plot| quadratic_plot)
linear_plot + diff_slopes_plot + quadratic_plot
linear_plot + diff_slopes_plot + quadratic_plot
linear_plot + diff_slopes_plot + quadratic_plot
(linear_plot | diff_slopes_plot) /
quadratic_plot
(linear_plot | diff_slopes_plot) /
quadratic_plot
linear_plot  + diff_slopes_plot
linear_plot
linear_plot
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
mlda$forcing
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
mlda
mlda$yhat_linear <- predict(linear_common_slope) # we create a new variable containing the predicted mortality rate
linear_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_linear,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Linear model with common slope",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
linear_plot
diff_slopes_plot <- mlda %>%
ggplot(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(title = "Linear model with different slopes",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
linear_different_slope <- lm(outcome ~ treatment*forcing, data = mlda)
summary(linear_different_slope)
diff_slopes_plot <- mlda %>%
ggplot(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(title = "Linear model with different slopes",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
diff_slopes_plot
linear_different_slope <- lm(outcome ~ treatment*forcing, data = mlda)
summary(linear_different_slope)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
mlda$yhat_quadratic <- predict(quadratic)
quadratic_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_quadratic,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Quadratic plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
quadratic_plot
yhat_quadratic
mlda$yhat_quadratic <- predict(quadratic)
quadratic_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_quadratic,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Quadratic plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
quadratic_plot
summary(quadratic)
ed_achievement <- lm(years_of_schooling ~ treatment + hh_income, data = cct_data)
cct_data <- read.csv("./data/cct_data.csv") # loading simulated data frame of the program
ggplot(cct_data,
aes(x = hh_income,
y = years_of_schooling,
color = factor(treatment))) +
geom_point() +
labs(x = "Household Income",
y = "Years of Schooling") +
scale_color_discrete(name = " ",
labels = c("No treatment", "Treatment")) +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
ggplot(cct_data,
aes(x = hh_income,
y = treatment,
color = factor(treatment))) +
geom_point() +
labs(x = "Household Income",
y = "Treatment") +
scale_color_discrete(name = " ",
labels = c("No treatment", "Treatment")) +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
ggplot(cct_data,
aes(x = hh_income,
y = years_of_schooling,
color = factor(treatment))) +
geom_point() +
labs(x = "Household Income",
y = "Years of Schooling") +
scale_color_discrete(name = " ",
labels = c("No treatment", "Treatment")) +
geom_vline(xintercept = 20000, linetype = "dotted") +
theme_minimal()
# running linear model with common slope
ed_achievement <- lm(years_of_schooling ~ treatment + hh_income, data = cct_data)
summary(ed_achievement)
llr <- RDestimate(outcome ~ agecell, data = mlda, cutpoint = 21)
summary(llr)
library(dplyr) # for data wrangling
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(rdd) # for RDestimate()
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
ggplot(mlda, aes(x = agecell, # actual age
y = treatment, # are they over 21 or not
color = factor(treatment))) +
geom_point() +
labs(x = "Age",
y = "Treatment Probability") +
scale_color_discrete(name = " ",
labels = c("Under legal drinking age", "Over legal drinking age")) +
geom_vline(xintercept = 21, linetype = "dotted") +
theme_minimal()
ggplot(mlda,
aes(x = agecell, # age
y = outcome)) + # mortality rate per 100k accidents
geom_point() +
geom_vline(xintercept = 21, linetype = "dotted") +
labs(title = "Exploratory plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
theme_minimal()
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + agecell, data = mlda)
summary(linear_common_slope)
library(dplyr) # for data wrangling
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
mlda$yhat_linear <- predict(linear_common_slope) # we create a new variable containing the predicted mortality rate
linear_plot <- mlda %>%
ggplot(aes(x = agecell,
y = yhat_linear,
col = factor(treatment))) +
geom_point(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
labs(title = "Linear model with common slope",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
geom_line(data = mlda[mlda$agecell >= 21,],
color = "#00BFC4",
size = 1) +
geom_line(data = mlda[mlda$agecell < 21,],
color = "#F8766D",
size = 1) +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
linear_plot
diff_slopes_plot <- mlda %>%
ggplot(aes(x = agecell,
y = outcome,
col = factor(treatment))) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(title = "Linear model with different slopes",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
scale_color_manual(name = "",
values = c("#F8766D", "#00BFC4"),
labels = c("Control", "Treatment")) +
theme_minimal()
diff_slopes_plot
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic2 <- lm(outcome ~ agecell +
I(agecell^2) + # I tells R to interpret "as is"
treatment +
I(agecell * treatment) +
I((agecell^2) * treatment),
data = mlda)
summary(quadratic2)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic2 <- lm(outcome ~ agecell +
I(agecell^2) + # I tells R to interpret "as is"
treatment +
I(agecell * treatment) +
I((agecell^2) * treatment),
data = mlda)
summary(quadratic2)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
library(dplyr) # for data wrangling
library(ggplot2) # for creating plots
library(rdd) # for RDestimate()
set.seed(42) # for consistent results
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic2 <- lm(outcome ~ agecell +
I(agecell^2) + # I tells R to interpret "as is"
treatment +
I(agecell * treatment) +
I((agecell^2) * treatment),
data = mlda)
summary(quadratic)
quadratic <- lm(outcome ~ forcing +
I(forcing^2) + # I tells R to interpret "as is"
treatment +
I(forcing * treatment) +
I((forcing^2) * treatment),
data = mlda)
summary(quadratic)
quadratic2 <- lm(outcome ~ agecell +
I(agecell^2) + # I tells R to interpret "as is"
treatment +
I(agecell * treatment) +
I((agecell^2) * treatment),
data = mlda)
summary(quadratic2)
mlda <- read.csv("./data/mlda.csv") # loading data from Mastering Metrics
ggplot(mlda, aes(x = agecell, # actual age
y = treatment, # are they over 21 or not
color = factor(treatment))) +
geom_point() +
labs(x = "Age",
y = "Treatment Probability") +
scale_color_discrete(name = " ",
labels = c("Under legal drinking age", "Over legal drinking age")) +
geom_vline(xintercept = 21, linetype = "dotted") +
theme_minimal()
ggplot(mlda,
aes(x = agecell, # age
y = outcome)) + # mortality rate per 100k accidents
geom_point() +
geom_vline(xintercept = 21, linetype = "dotted") +
labs(title = "Exploratory plot",
x = "Forcing variable (Age)",
y = "Mortality rate from motor vehicle \naccidents (per 100,000)") +
theme_minimal()
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + forcing, data = mlda)
summary(linear_common_slope)
# running linear model with common slope
linear_common_slope <- lm(outcome ~ treatment + agecell, data = mlda)
summary(linear_common_slope)
linear_different_slope <- lm(outcome ~ treatment*agecell, data = mlda)
summary(linear_different_slope)
linear_different_slope <- lm(outcome ~ treatment*forcing, data = mlda)
summary(linear_different_slope)
